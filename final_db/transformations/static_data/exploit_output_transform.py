"""
Exploit Output transformation (static dataset — uses NULL for missing fields)
All mapped fields are prefixed with `exploit_` to avoid collisions in the final table.
"""

import logging
from typing import Dict, Any
from utils.cve_utils import normalize_cve  # ✅ Normalize CVE format (CVE-YYYY-NNNN)

log = logging.getLogger(__name__)

# Final strict schema for Exploit Output dataset
EXPLOIT_OUTPUT_FINAL_COLUMNS = [
    "cve_id",
    "exploit_output_author",
    "exploit_output_date",
    "exploit_output_edb_id",
    "exploit_output_link",
    "exploit_output_platform",
    "exploit_output_refined_vulnerability_name",
    "exploit_output_type",
    "exploit_output_vuln_title",
    "exploit_output_source",
]


def _get_field(record: Dict[str, Any], names):
    """Return the first present key from names."""
    for n in names:
        if n in record:
            return record[n]
    return None


def clean_and_rename(record: Dict[str, Any]) -> Dict[str, Any]:
    """
    Clean and rename Exploit Output dataset records to match strict schema.
    - Always includes normalized CVE ID
    - Fills missing values with None (DynamoDB NULL)
    """
    out: Dict[str, Any] = {}

    # Always include normalized CVE
    cve = _get_field(record, ["CVE_ID", "CVE", "cve_id", "Name"])
    out["cve_id"] = normalize_cve(cve) if cve else None

    rename_map = {
        "Author": "exploit_output_author",
        "Date": "exploit_output_date",
        "EDB ID": "exploit_output_edb_id",
        "Link": "exploit_output_link",
        "Platform": "exploit_output_platform",
        "Refined Vulnerability Name": "exploit_output_refined_vulnerability_name",
        "Type": "exploit_output_type",
        "Vuln Title": "exploit_output_vuln_title",
    }

    # Map fields
    for old, new in rename_map.items():
        val = _get_field(record, [old])
        if val is not None:
            out[new] = val

    # Add provenance
    out["exploit_output_source"] = "exploit-output"

    # Fill missing columns with None (DynamoDB NULL)
    for col in EXPLOIT_OUTPUT_FINAL_COLUMNS:
        out.setdefault(col, None)

    return out
